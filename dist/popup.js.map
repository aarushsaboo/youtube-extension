{"version":3,"file":"popup.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH,CAAC","sources":["webpack://youtube-extension/./src/popup/popup.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const keywordInput = document.getElementById(\"keywordInput\")\r\n  const addKeywordBtn = document.getElementById(\"addKeyword\")\r\n  const keywordList = document.getElementById(\"keywordList\")\r\n  const categoryFilter = document.getElementById(\"categoryFilter\")\r\n  const restrictAdultCheckbox = document.getElementById(\"restrictAdult\")\r\n  const saveFiltersBtn = document.getElementById(\"saveFilters\")\r\n  const animationStyles = document.getElementsByName(\"filterAnimationStyle\")\r\n\r\n  // Load existing filters\r\n  chrome.storage.sync.get(\r\n    [\"blockedKeywords\", \"blockedCategory\", \"restrictAdult\", \"animationStyle\", \"colorScheme\"],\r\n    function (data) {\r\n      console.log(\"Loaded data from storage:\", data) // <--- ADD THIS LINE\r\n      // Populate existing filters\r\n      if (data.blockedKeywords) {\r\n        data.blockedKeywords.forEach((keyword) => {\r\n          addKeywordToList(keyword)\r\n        })\r\n      }\r\n\r\n      if (data.blockedCategory) {\r\n        categoryFilter.value = data.blockedCategory\r\n      }\r\n\r\n      if (data.restrictAdult) {\r\n        restrictAdultCheckbox.checked = data.restrictAdult\r\n      }\r\n\r\n      if (data.animationStyle) {\r\n        const selectedRadio = document.getElementById(data.animationStyle)\r\n        if (selectedRadio) {\r\n          selectedRadio.checked = true\r\n          console.log(\"Selected animation style:\", data.animationStyle)\r\n        }\r\n      }\r\n\r\n      //new\r\n      if (data.colorScheme) {\r\n        const colorSchemeDropdown = document.getElementById(\"colorSchemeSelect\")\r\n        colorSchemeDropdown.value = data.colorScheme\r\n      }\r\n\r\n    }\r\n  )\r\n\r\n  // Add keyword functionality\r\n  addKeywordBtn.addEventListener(\"click\", function () {\r\n    const keyword = keywordInput.value.trim()\r\n    if (keyword) {\r\n      addKeywordToList(keyword)\r\n      keywordInput.value = \"\"\r\n    }\r\n  })\r\n\r\n  function addKeywordToList(keyword) {\r\n    const keywordElement = document.createElement(\"div\")\r\n    keywordElement.textContent = keyword\r\n\r\n    const removeBtn = document.createElement(\"button\")\r\n    removeBtn.textContent = \"X\"\r\n    removeBtn.addEventListener(\"click\", function () {\r\n      keywordList.removeChild(keywordElement)\r\n    })\r\n\r\n    keywordElement.appendChild(removeBtn)\r\n    keywordList.appendChild(keywordElement)\r\n  }\r\n\r\n  // Save filters with visual feedback\r\n  saveFiltersBtn.addEventListener(\"click\", function () {\r\n    // Collect keywords\r\n    const keywords = Array.from(keywordList.children).map((el) =>\r\n      el.textContent.replace(\"X\", \"\").trim()\r\n    )\r\n\r\n    const selectedAnimationStyle = Array.from(animationStyles).find(\r\n      (radio) => radio.checked\r\n    ).id\r\n    console.log(\"Saving animation style:\", selectedAnimationStyle)\r\n\r\n    const selectedColorScheme = document.getElementById(\"colorSchemeSelect\").value\r\n\r\n\r\n    // Save filters to storage\r\n    chrome.storage.sync.set(\r\n      {\r\n        blockedKeywords: keywords,\r\n        blockedCategory: categoryFilter.value,\r\n        restrictAdult: restrictAdultCheckbox.checked,\r\n        animationStyle: selectedAnimationStyle,\r\n        colorScheme: selectedColorScheme,\r\n      },\r\n      function () {\r\n        saveFiltersBtn.textContent = \"Saved!\"\r\n        saveFiltersBtn.style.backgroundColor = \"green\"\r\n        setTimeout(() => {\r\n          saveFiltersBtn.textContent = \"Save Filters\"\r\n          saveFiltersBtn.style.backgroundColor = \"\"\r\n        }, 1500)\r\n      }\r\n    )\r\n  })\r\n})\r\n"],"names":[],"sourceRoot":""}